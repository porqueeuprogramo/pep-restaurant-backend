name: 'Deploy EKS'
description: 'Deploys specific docker image to EKS cluster'

inputs:
    AWS_ACCESS_KEY_ID:
        description: "AWS Access Key of the account where the docker image will be stored."
        required: true
    AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key of the account where the docker image will be stored."
        required: true
    REGION:
        description: "Name of the region to connect to."
        required: true
    ENV:
        description: "Name of the EKS environment where the docker image will be deployed."
        required: true
    NAMESPACE:
        description: "Name of the EKS namespace where the docker image will be deployed."
        required: true
    SERVICE:
        description: "Name of the service to be deployed."
        required: true
    IMAGE_TAG:
        description: "Tag of docker image present in ECR"
        required: true
    HELM_CHART:
        description: "Helm folder"
        required: false
        default: "kubernetes"
runs:
    using: composite
    steps:
        -   uses: actions/checkout@v3
            with:
                submodules: true
                fetch-depth: 0

        -   uses: azure/setup-helm@v3
            with:
                version: 'v3.12.1'

        -   uses: azure/setup-kubectl@v3
            with:
                version: 'v1.25.13'

        -   name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v3
            env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PEP }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PEP }}
            with:
                aws-region: eu-west-2
                role-to-assume: arn:aws:iam::905418115951:role/eks-cluster-pep
                role-duration-seconds: 1200
                role-session-name: manager
                role-skip-session-tagging: true
                output-credentials: true
                role-chaining: true

        -   name: Generate kubeconfig and setting context
            run: |
                aws eks --region ${{ inputs.REGION }} update-kubeconfig --name pep-dev
                kubectl config set-context --current --namespace ${{ inputs.NAMESPACE }}
                kubectl get pods
            shell: bash

        -   name: Building Helm dependencies
            run: |
                helm dependency build ${{ inputs.HELM_CHART }}
            shell: bash

        -   name: Deploy Helm Chart to Kubernetes
            env:
                ENVIRONMENT: ${{ inputs.ENV }}
                AWS_REGION: ${{ inputs.REGION }}
                HELM_WORKING_DIRECTORY: ${{inputs.helm-working-directory}}
                WORKSPACE: ${{ github.workspace }}
            run: |
                helm upgrade --install ${{ inputs.SERVICE}} ${{ inputs.HELM_CHART }} --set app.properties.content=${{ inputs.CONTENT }} --set image.tag=${{ inputs.IMAGE_TAG }} -f ${{ inputs.HELM_CHART}}/values/${{ inputs.HUB }}/values-${{ inputs.ENV }}.yaml --namespace=${{ inputs.NAMESPACE }}
            shell: bash
